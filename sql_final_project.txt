Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

Code used: 

SELECT COUNT(*)
FROM table
	
i. Attribute table =  10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

Code used:

SELECT COUNT(Distinct(key))
FROM table

i. Business = 10000, id (primary)
ii. Hours = 1562, business_id (foreign)
iii. Category = 2643, business_id (foreign)
iv. Attribute =1115, business_id (foreign)
v. Review =10000, id (primary); =8090, business_id (foreign); =9581, user_id (foreign)/ 
vi. Checkin =  493, business_id (foreign)
vii. Photo =10000, id (primary); =6493, business_id (foreign).
viii. Tip = 537, user_id (foreign); =3979, business_id (foreign).
ix. User = 10000, id (primary)
x. Friend = 11, user_id (foreign)
xi. Elite_years =2780, user_id (foreign)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:
	no. 
	
	SQL code used to arrive at answer:
		SELECT COUNT(*)
		FROM user
		WHERE id IS NULL OR 
		  name IS NULL OR 
		  review_count IS NULL OR 
		  yelping_since IS NULL OR
		  useful IS NULL OR 
		  funny IS NULL OR 
		  cool IS NULL OR 
		  fans IS NULL OR 
		  average_stars IS NULL OR 
		  compliment_hot IS NULL OR 
		  compliment_more IS NULL OR 
		  compliment_profile IS NULL OR 
		  compliment_cute IS NULL OR 
		  compliment_list IS NULL OR 
		  compliment_note IS NULL OR 
		  compliment_plain IS NULL OR 
		  compliment_cool IS NULL OR 
		  compliment_funny IS NULL OR 
		  compliment_writer IS NULL OR 
		  compliment_photos IS NULL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1		max:5		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0	max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000 	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	SELECT city, SUM(review_count) AS num_reviews
		FROM business
		GROUP BY city
		ORDER BY num_reviews DESC

	Copy and Paste the Result Below:
+-----------------+-------------+
| city            | num_reviews |
+-----------------+-------------+
| Las Vegas       |       82854 |
| Phoenix         |       34503 |
| Toronto         |       24113 |
| Scottsdale      |       20614 |
| Charlotte       |       12523 |
| Henderson       |       10871 |
| Tempe           |       10504 |
| Pittsburgh      |        9798 |
| Montréal        |        9448 |
| Chandler        |        8112 |
| Mesa            |        6875 |
| Gilbert         |        6380 |
| Cleveland       |        5593 |
| Madison         |        5265 |
| Glendale        |        4406 |
| Mississauga     |        3814 |
| Edinburgh       |        2792 |
| Peoria          |        2624 |
| North Las Vegas |        2438 |
| Markham         |        2352 |
| Champaign       |        2029 |
| Stuttgart       |        1849 |
| Surprise        |        1520 |
| Lakewood        |        1465 |
| Goodyear        |        1155 |
+-----------------+-------------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars, SUM(review_count) AS count
			FROM business
			WHERE city == 'Avon'
			GROUP BY stars	


Copy and Paste the Resulting Table Below (2 columns – star rating and count):


+-------+-------+
| stars | count |
+-------+-------+
|   1.5 |    10 |
|   2.5 |     6 |
|   3.5 |    88 |
|   4.0 |    21 |
|   4.5 |    31 |
|   5.0 |     3 |
+-------+-------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT stars, SUM(review_count) AS count
			FROM business
			WHERE city == 'Beachwood'
			GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+-------+-------+
| stars | count |
+-------+-------+
|   2.0 |     8 |
|   2.5 |     3 |
|   3.0 |    11 |
|   3.5 |     6 |
|   4.0 |    69 |
|   4.5 |    17 |
|   5.0 |    23 |
+-------+-------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
	SELECT id,name,review_count
		FROM user
		ORDER BY review_count DESC
		LIMIT 3	
		
	Copy and Paste the Result Below:
	

+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+	


8. Does posting more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
	Yes, there seems to be some correlation, but there is also a correlation between number of fans and how long the user has been 	yelping.

Consider the following code: 
	SELECT id,name,review_count,fans,yelping_since
		FROM user
		ORDER BY fans DESC
		ORDER BY fans DESC
	
Which outputs 
+------------------------+-----------+--------------+------+---------------------+
| id                     | name      | review_count | fans | yelping_since       |
+------------------------+-----------+--------------+------+---------------------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |          609 |  503 | 2007-07-19 00:00:00 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 | 2011-03-30 00:00:00 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 | 2012-11-27 00:00:00 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 | 2012-12-16 00:00:00 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 | 2009-07-08 00:00:00 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 | 2009-10-05 00:00:00 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |          377 |  133 | 2009-02-05 00:00:00 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 | 2015-02-19 00:00:00 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 | 2012-04-05 00:00:00 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 | 2007-08-14 00:00:00 |
| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 | 2009-05-31 00:00:00 |
| -DmqnhW4Omr3YhmnigaqHg | Tiffany   |          408 |  111 | 2008-10-28 00:00:00 |
| -cv9PPT7IHux7XUc9dOpkg | bernice   |          255 |  105 | 2007-08-29 00:00:00 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 | 2006-03-28 00:00:00 |
| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 | 2010-10-01 00:00:00 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 | 2006-07-19 00:00:00 |
| -4viTt9UC44lWCFJwleMNQ | Ben       |          307 |   96 | 2007-03-10 00:00:00 |
| -3i9bhfvrM3F1wsC9XIB8g | Linda     |          584 |   89 | 2005-08-07 00:00:00 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 | 2012-10-08 00:00:00 |
| -ePh4Prox7ZXnEBNGKyUEA | Jessica   |          220 |   84 | 2009-01-12 00:00:00 |
| -4BEUkLvHQntN6qPfKJP2w | Greg      |          408 |   81 | 2008-02-16 00:00:00 |
| -C-l8EHSLXtZZVfUAUhsPA | Nieves    |          178 |   80 | 2013-07-08 00:00:00 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 | 2009-09-07 00:00:00 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 | 2008-01-03 00:00:00 |
| -0zEEaDFIjABtPQni0XlHA | Nicole    |          161 |   73 | 2009-04-30 00:00:00 |
+------------------------+-----------+--------------+------+---------------------+
(Output limit exceeded, 25 of 10000 total rows shown)




9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews with the word "love" (count= 1780) than the word "hate" (count=232)

	
	SQL code used to arrive at answer:

	SELECT COUNT(*)								
		FROM review										
		WHERE text LIKE "%love%"
	

	SELECT COUNT(*)								
		FROM review										
		WHERE text LIKE "%hate%"
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT id,name,fans
	FROM user
	ORDER BY fans DESC
	  LIMIT 10
	
	Copy and Paste the Result Below:
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+

	
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as “useful” or “funny”?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:
	
	SELECT name,fans,useful,funny,review_count,yelping_since
	FROM user
	ORDER BY fans DESC
	LIMIT 10	

	
	Copy and Paste the Result Below:
+-----------+------+--------+--------+--------------+---------------------+
| name      | fans | useful |  funny | review_count | yelping_since       |
+-----------+------+--------+--------+--------------+---------------------+
| Amy       |  503 |   3226 |   2554 |          609 | 2007-07-19 00:00:00 |
| Mimi      |  497 |    257 |    138 |          968 | 2011-03-30 00:00:00 |
| Harald    |  311 | 122921 | 122419 |         1153 | 2012-11-27 00:00:00 |
| Gerald    |  253 |  17524 |   2324 |         2000 | 2012-12-16 00:00:00 |
| Christine |  173 |   4834 |   6646 |          930 | 2009-07-08 00:00:00 |
| Lisa      |  159 |     48 |     13 |          813 | 2009-10-05 00:00:00 |
| Cat       |  133 |   1062 |    672 |          377 | 2009-02-05 00:00:00 |
| William   |  126 |   9363 |   9361 |         1215 | 2015-02-19 00:00:00 |
| Fran      |  124 |   9851 |   7606 |          862 | 2012-04-05 00:00:00 |
| Lissa     |  120 |    455 |    150 |          834 | 2007-08-14 00:00:00 |
+-----------+------+--------+--------+--------------+---------------------+
	
	
	Please explain your findings and interpretation of the results:
There appears to be little to no correlation between having a large number of fans and being listed as "useful" or "funny". 
For example, consider the user named Harald. Despite having the third highest number of fans, Harald has more useful and funny tags than the rest of the top 10 user combined. 
Contra to the phenomenma exhibited by Harald, Mimi has nearly 100 more fans, but only a fraction of Harald's "useful" and "funny" tags.
Do note that the analysis above is very informal. If I had the choice, I would load the data set into R and perform a more robust analysis. 
	
	
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
I have chosen to analzyze food in Toronto. There does seem to be a significant difference in the distribution of hours. Namely, Loblaws opens early and close late; Halo Brewery open midday and closes late; and Cabin Fever opens in the afternoon, then closes in the early morning. 
Do bare in mind that the sample size is very small (3). 


ii. Do the two groups you chose to analyze have a different number of reviews?
         Yes, the 2-3 star food place (Loblaws) only has 10 review. Whereas, Halo Brewery and Cabin Fever collectively have 41 reviews. 
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
Since the sample size is so small I find it difficult to make any inference. However, it is worth noting that each food place listed is in a different zip code, so there could be some sort of relation.

SQL code used for analysis:

SELECT B.name,B.review_count,H.hours,postal_code,
        CASE
				  WHEN hours LIKE "%monday%" THEN 1
				  WHEN hours LIKE "%tuesday%" THEN 2
				  WHEN hours LIKE "%wednesday%" THEN 3
				  WHEN hours LIKE "%thursday%" THEN 4
				  WHEN hours LIKE "%friday%" THEN 5
				  WHEN hours LIKE "%saturday%" THEN 6
				  WHEN hours LIKE "%sunday%" THEN 7
			   END AS day_of_week,
			   CASE
			    WHEN B.stars BETWEEN 0 AND 2 THEN '0-2 stars'
				  WHEN B.stars BETWEEN 2 AND 3 THEN '2-3 stars'
				  WHEN B.stars BETWEEN 4 AND 5 THEN '4-5 stars'
			   END AS star_rating
		FROM business B INNER JOIN hours H
		ON B.id = H.business_id
		INNER JOIN category C
		ON C.business_id = B.id
		WHERE (B.city == 'Toronto'
		AND
		C.category LIKE 'Food')
		AND
		(B.stars BETWEEN 0 AND 2
		OR
		B.stars BETWEEN 2 AND 3
		OR
		B.stars BETWEEN 4 AND 5)
		GROUP BY stars
		ORDER BY review_count ASC
		
		
				
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: If a business is closed, then the average number of reviews is much less than one that is open. That is to say on average, if a business is closed, then the average number of reviews is ~23, whereas if a business is open then the average number of reviews is ~31.
         
         
ii. Difference 2: There are significantly more businesses which are open compared to those that are closed. 
         
         
         
SQL code used for analysis:

SELECT COUNT(DISTINCT(id)),AVG(review_count),SUM(review_count),MIN(review_count), MAX(review_count),AVG(stars),is_open
		FROM business
		GROUP BY is_open

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
I would like to analyze the relationship between the availability of Wifi at a given business and whether that correlates with a low (0-3) or high star (3-5) rating for the business
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
To parse the data, I will need to carefully maintain and interpret the "attributes" of each business, since that is where the data pertaining to wifi is stored. Furtermore, making each attribute upper case ought to make the analysis easier. One thing that will be necessary in this analysis is running setting a boolean value for the statement "has wifi". This will make histograms easier to obtain.                               
                  
iii. Output of your finished dataset:
         
+------------------------+----------------------------------------+---------+----------------------------+-------+--------------+---------+
| id                     | name                                   | city    | UPPER(a.name)              | stars | review_count | is_open |
+------------------------+----------------------------------------+---------+----------------------------+-------+--------------+---------+
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | ALCOHOL                    |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | HASTV                      |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | NOISELEVEL                 |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | RESTAURANTSATTIRE          |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | BUSINESSACCEPTSCREDITCARDS |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | MUSIC                      |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | AMBIENCE                   |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | RESTAURANTSGOODFORGROUPS   |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | CATERS                     |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | WIFI                       |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | RESTAURANTSRESERVATIONS    |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | BIKEPARKING                |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | RESTAURANTSTAKEOUT         |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | GOODFORKIDS                |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | HAPPYHOUR                  |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | GOODFORDANCING             |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | DOGSALLOWED                |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | RESTAURANTSTABLESERVICE    |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | OUTDOORSEATING             |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | RESTAURANTSPRICERANGE2     |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | RESTAURANTSDELIVERY        |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | BESTNIGHTS                 |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | GOODFORMEAL                |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | BUSINESSPARKING            |   4.0 |          431 |       1 |
| 2skQeu3C36VCiB653MIfrw | Bootleggers Modern American Smokehouse | Phoenix | COATCHECK                  |   4.0 |          431 |       1 |
+------------------------+----------------------------------------+---------+----------------------------+-------+--------------+---------+
(Output limit exceeded, 25 of 787 total rows shown)
         
iv. Provide the SQL code you used to create your final dataset:

SELECT DISTINCT(b.id),b.name, b.city, UPPER(a.name), b.stars, b.review_count,b.is_open 
FROM business b 
INNER JOIN attribute a
ON b.id = a.business_id
--WHERE UPPER(a.name)=="WIFI" 
ORDER BY b.review_count DESC

